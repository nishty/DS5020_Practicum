..
---
title: "R Notebook"
output: html_notebook
---

# Practicum 1

### Load data

load data from link: <https://data.ny.gov/api/views/ngbt-9rwf/rows.xml>

Since the file has nested \<row\>\</row\> tags:

```{xml}
<row>
  <row>
  </row>
  ...
  ...
  <row>
  </row>
</row>
```

the getNodeSet will also catch the outer \<row\> which include all the rows inside as a single node, here, we drop the first node

```{r}
options(max.print=30)
library(tidyverse)
library(XML)
library(RCurl)
library(knitr)
library(cowplot)
parsed_admission = getURL('https://data.ny.gov/api/views/ngbt-9rwf/rows.xml') %>%
  xmlParse()

df_admission = xmlToDataFrame(nodes=getNodeSet(parsed_admission, '//row')[-1]) %>% as_tibble()
```

## Data Exploration

### Inspect

```{r}
glimpse(df_admission)
```

## Check Distribution

since no NA or invalid values are found. Data cleaning won't be performed until certain analysis.

1.  convert admissions variable from string to integer

```{r}
# NA data
df_admission %>%
  is.na() %>%
  apply(2, FUN=sum) %>%
  kable()

# 
df_admission = df_admission %>%
  mutate(admissions=as.integer(admissions))

# validate vars

for (col in colnames(df_admission)[-length(df_admission)]){
  dist = df_admission[col] %>%
    group_by(.data[[col]]) %>%
    summarise(n=n()) %>%
    ggplot(aes(x=.data[[col]], .data[["n"]])) + geom_col()
  show(dist)
  ggsave(filename=paste(col, '.png'), plot=dist)
}

```

```{r}
df_admission %>%
  select(admissions) %>%
  ggplot(aes(admissions)) + geom_density()
ggsave('admission.png')
```
```{r}
# function to find the outliers which are more than 2 sd from the mean
boxplot(df_admission$admissions)

outliers <- function(x){
  return (x > mean(x) +3*sd(x) | x< mean(x) - 3*sd(x))
}

# df_admission <- df_admission[!outliers(df_admission[['admisions']])]

```

# Creating Relational tibbles

### Read and parse the data from county_id.txt

```{r}
county = tribble(
  ~county_code, ~county_of_program_location,
  "AL", "Albany",
  "CA", "Cattaraugus",
  "CN", "Chenango",
  "DE", "Delaware",
  "FR", "Franklin",
  "HA", "Hamilton",
  "LE", "Lewis",
  "MG", "Montgomery",
  "ON", "Oneida",
  "OL", "Orleans",
  "NYQ", "Queens",
  "SL", "Saint Lawrence",
  "SY", "Schuyler",
  "SV", "Sullivan",
  "WR", "Warren",
  "WY", "Wyoming",
  "AG", "Allegany",
  "CY", "Cayuga",
  "CL", "Clinton",
  "DU", "Dutchess",
  "FU", "Fulton",
  "HE", "Herkimer",
  "LI", "Livingston",
  "NA", "Nassau",
  "OD", "Onondaga",
  "OS", "Oswego",
  "RE", "Rensselaer",
  "SA", "Saratoga",
  "SE", "Seneca",
  "TI", "Tioga",
  "WS", "Washington",
  "YA", "Yates",
  "NYB", "Bronx",
  "CH", "Chautauqua",
  "CO", "Columbia",
  "ER", "Erie",
  "GE", "Genesee",
  "JE", "Jefferson",
  "MA", "Madison",
  "NY", "New York",
  "OT", "Ontario",
  "OG", "Otsego",
  "NYR", "Richmond",
  "SC", "Schenectady",
  "ST", "Steuben",
  "TO", "Tompkins",
  "WA", "Wayne",
  "BM", "Broome",
  "CM", "Chemung",
  "CR", "Cortland",
  "ES", "Essex",
  "GR", "Greene",
  "NYK", "Kings",
  "MO", "Monroe",
  "NI", "Niagara",
  "OR", "Orange",
  "PU", "Putnam",
  "RO", "Rockland",
  "SH", "Schoharie",
  "SU", "Suffolk",
  "UL", "Ulster",
  "WE", "Westchester"
)
county %>%
  count(county_code) %>%
  filter(n>1)
county

```


```{r }
program_category <- tribble(
  ~program_code, ~program_category,
  "CR", "Crisis",
  "IN", "Inpatient",
  "OTP", "Opioid Treatment",
  "OP",  "Outpatient",
  "RE", "Residential",
  "SP", "Specialized"
)
program_category
```
```{r}
primary_substance_group <- tribble(
  ~substance_code, ~primary_substance_group,
  "A", "Alcohol",
  "O", "All Others",
  "C", "Cocaine incl Crack",
  "H", "Heroin",
  "M", "Marijuana incl Hashish",
  "N", "None",
  "OO", "Other Opioids "
)
primary_substance_group
```
```{r}
admissions_data <- df_admission %>%
  select( -program_category) %>%
  left_join(primary_substance_group, by = "substance_code")
head(admissions_data)
```
```{r Q4}
# Question 4
  annualAdmissions <- function(admissions_data){
  admissions_data_NY <- filter(admissions_data, county_code %in% c("NY", "NYQ", "NYB", "NYK", "NYR"))
  by_year <- group_by(admissions_data_NY, year) 
  adm_per_year <- summarize(by_year, sum = sum(admissions))
  return (adm_per_year)
  }
annualAdmissions_NY <- annualAdmissions(admissions_data)
ggplot(annualAdmissions_NY, aes(year, sum, group = 1))+
  geom_point()+
  geom_line()+
  geom_segment(aes(x = '2009', y = 0, xend = '2009', yend = 141245),linetype="dashed", color = "red")+
  labs(x = "Year", y = "Tottal_Admissions", title = "Total number of admissions in New York state over years")

## year 2009 has the maximum admissions(141245). after 2009, the number of admissions decrease year by year. 

#Question 6

df_admission_rehab <- filter(df_admission,
                   grepl('Rehab', service_type))
                  
df_admission_rehab_sum <-aggregate(df_admission_rehab$admissions, by=list(Substance=df_admission_rehab$primary_substance_group,                                                                          Age_group=df_admission_rehab$age_group), FUN=sum)

colnames(df_admission_rehab_sum)[3] <- "Sum"


```
```{r}
ggplot(df_admission_rehab_sum, aes(x=Substance, y=Sum))+
  geom_bar(stat='identity', fill="forest green")+
  facet_wrap(~Age_group,ncol=1,scales="free_y")

#From the graph we can see that for the age range 18 thru 24 , Heroin is the most prominent  substance
#For the age range 25 to 34 as well, heroin again is the most prominent substance
#For the age range 35 to 44, Alcohol is the most prominent substance
#For the age range 45 thought 54 and 55 and older , alcohol is the prominent substance
#Under 18 age group Marujana and Hasish is the prominent substance

```
```
#Question 7


df_admission_rehab_sum_county <-aggregate(df_admission_rehab$admissions, by=list(Substance=df_admission_rehab$primary_substance_group,                                                                          year=df_admission_rehab$year,county=df_admission_rehab$county_of_program_location), FUN=sum)

colnames(df_admission_rehab_sum_county)[4] <- "Sum"

df_admission_by_county<-aggregate(df_admission_rehab$admissions, by=list(                                                                         county=df_admission_rehab$county_of_program_location), FUN=sum)
colnames(df_admission_by_county)[2] <- "total_admissions"
# Counties with the most number of admissions

p1 <- ggplot(df_admission_by_county, aes(x=county, y=total_admissions, fill=county)) + geom_bar(stat="identity")

p1
```

```{r}
#Line chart overall grouped by substance 
df_admission_by_year_substance<-aggregate(df_admission_rehab$admissions, by=list(                                                                         substance=df_admission_rehab$primary_substance_group,                                                                     year=df_admission_rehab$year), FUN=sum)
colnames(df_admission_by_year_substance)[3] <- "total_admissions"
#Multiple Line graphs
ggplot(data=df_admission_by_year_substance, aes(x=year, y=total_admissions, group = substance, colour = substance)) +
    geom_line() +
    geom_point( size=2, shape=21, fill="white")+
   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))



 
```

```{r}
#Top 10 counties

df_admission_by_county_10 <- df_admission_by_county[with(df_admission_by_county,order(-total_admissions)),]

df_admission_by_county_10 <- df_admission_by_county_10[1:10,]
```

```{r}
#Trends in in certain counties and substance groups

df_admission_rehab_sum_county

df_admission_rehab_sum_county_10<-df_admission_rehab_sum_county %>%
      filter(county %in% df_admission_by_county_10$county)


ggplot(data=df_admission_rehab_sum_county_10, aes(x=year, y=Sum, group = Substance, colour = Substance)) +
    geom_line() +
    geom_point( size=1, shape=21, fill="white") + facet_wrap((~county))
     

#From the graph below we can see that in the top 10 counties , alcohol is the most prominent substance , followed by Heroin .
#Suffolk and Schenectady have heroin as a prominent substance in some years compared to alchohol.
#in some of the counties like Putnam and westchester , 2019 saw the most number of rehab admissions
#year 2020 for most counties had the lowest admissions

             
```

```{r}
#stacked bar plot 
ggplot(df_admission_rehab_sum_county_10, aes(fill=Substance, y=Sum, x=county)) + 
  geom_bar(position='stack', stat='identity') + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
```
